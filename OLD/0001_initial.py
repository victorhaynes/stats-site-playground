# Generated by Django 4.2.7 on 2024-04-04 17:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchId', models.CharField(max_length=20)),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'wrs_api_match',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatchSummoner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'wrs_api_matchsummoner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puuid', models.CharField(max_length=100)),
                ('gameName', models.CharField(max_length=50)),
                ('tagLine', models.CharField(max_length=10)),
                ('profileIconId', models.IntegerField()),
                ('encryptedSummonerId', models.CharField(max_length=100)),
                ('most_recent_game', models.CharField(max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SummonerOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoneroverview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('championId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='GameMode',
            fields=[
                ('queueId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='LegendaryItem',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('name', models.CharField(choices=[('americas', 'americas'), ('asia', 'asia'), ('europe', 'europe'), ('sea', 'sea'), ('esports', 'esports')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('split', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TierTwoBoot',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('code', models.CharField(choices=[('na1', 'na1'), ('euw1', 'euw1'), ('br1', 'br1')], primary_key=True, serialize=False)),
                ('region', models.ForeignKey(db_column='region', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.region')),
            ],
        ),
        migrations.CreateModel(
            name='Patch',
            fields=[
                ('full_version', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=6)),
                ('season_id', models.ForeignKey(db_column='season_id', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.season')),
            ],
        ),
        migrations.RunSQL(
            """
            ---remove everything after NOT NULL on "id" (PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY), create partition, add partitions, insert partitions after foreign key constraint, add composite PK
            --- at the momenent issue bc id has to be specified, which we dont want                 "id" bigint NOT NULL,
            --- CHANGE id to SERIAL NOT NULL
            --- make all ALTER TABLES part of the table definition
            --- ADD ON DELETE CASCADE to all FOREIGN KEYS

                CREATE TABLE "wrs_api_summoner" (
                    "id" SERIAL NOT NULL,
                    "puuid" varchar(100) NOT NULL,
                    "gameName" varchar(50) NOT NULL,
                    "tagLine" varchar(10) NOT NULL,
                    "profileIconId" integer NOT NULL,
                        "encryptedSummonerId" varchar(100) NOT NULL,
                    "most_recent_game" varchar(25) NULL,
                    "created_at" timestamp with time zone NOT NULL,
                    "updated_at" timestamp with time zone NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    CONSTRAINT "wrs_api_summoner_puuid_platform_c4182f4c_uniq" UNIQUE ("puuid", "platform"),
                    PRIMARY KEY (platform, puuid)
                ) PARTITION BY LIST (platform);


                ---ALTER TABLE "wrs_api_summoner" ADD CONSTRAINT "wrs_api_summoner_puuid_platform_c4182f4c_uniq" UNIQUE ("puuid", "platform");
                ---ALTER TABLE "wrs_api_summoner" ADD CONSTRAINT "wrs_api_summoner_platform_39a7e8f3_fk_wrs_api_platform_code" FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") DEFERRABLE INITIALLY DEFERRED;

                CREATE TABLE wrs_api_summoner_na1 PARTITION OF wrs_api_summoner FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoner_euw1 PARTITION OF wrs_api_summoner FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoner_br1 PARTITION OF wrs_api_summoner FOR VALUES IN ('br1');


                CREATE INDEX "wrs_api_summoner_puuid_ec1c8f0f_like" ON "wrs_api_summoner" ("puuid" varchar_pattern_ops);
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3" ON "wrs_api_summoner" ("platform");
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3_like" ON "wrs_api_summoner" ("platform" varchar_pattern_ops);

                ---INSERT INTO wrs_api_platform (code) VALUES ("tr1"), ("ph2"), ("la1"), ("tw2"), ("la2"), ("eun1"), ("vn2"), ("kr"), ("oc1"), ("na1"), ("jp1"), ("euw1"), ("sg2"), ("ru"), ("th2"), ("br1");
                ---INSERT INTO wrs_api_platform (code) VALUES ('na1'), ('euw1'), ('br1');

            """
        ),
        migrations.RunSQL(
            """
                --- OVERVIEWS
                CREATE TABLE "wrs_api_summoneroverview" (
                "id" SERIAL NOT NULL,
                "puuid" varchar(100) NOT NULL,
                "platform" varchar NOT NULL, 
                "season_id" bigint NOT NULL, 
                "metadata" jsonb NOT NULL,
                "created_at" timestamp with time zone NOT NULL,
                "updated_at" timestamp with time zone NOT NULL,
                FOREIGN KEY (platform, puuid) REFERENCES wrs_api_summoner (platform, puuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                FOREIGN KEY (season_id) REFERENCES wrs_api_season (id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                CONSTRAINT "wrs_api_summoneroverview_season_id_summoner_id_pl_1da9a9db_uniq" UNIQUE ("season_id", "puuid", "platform"),
                PRIMARY KEY (puuid, season_id, platform)
                ) PARTITION BY LIST (platform);
                

                ---ALTER TABLE "wrs_api_summoneroverview" 
                ---    ADD CONSTRAINT "wrs_api_summoneroverview_season_id_summoner_id_pl_1da9a9db_uniq" UNIQUE ("season_id", "puuid", "platform");
                ---ALTER TABLE "wrs_api_summoneroverview" 
                ---    ADD CONSTRAINT "wrs_api_summonerover_platform_99315587_fk_wrs_api_p" FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") DEFERRABLE INITIALLY DEFERRED;

                CREATE TABLE wrs_api_summoneroverview_na1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoneroverview_euw1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoneroverview_br1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('br1');

                -- ALTER TABLE "wrs_api_summoneroverview" ADD CONSTRAINT "wrs_api_summonerover_season_id_4cf689b6_fk_wrs_api_s" FOREIGN KEY ("puuid") REFERENCES "wrs_api_season" ("id") DEFERRABLE INITIALLY DEFERRED;
                -- ALTER TABLE "wrs_api_summoneroverview" ADD CONSTRAINT "wrs_api_summonerover_summoner_id_4f6afb74_fk_wrs_api_s" FOREIGN KEY ("summoner_id") REFERENCES "wrs_api_summoner" ("id") DEFERRABLE INITIALLY DEFERRED;

                CREATE INDEX "wrs_api_summoneroverview_platform_99315587" ON "wrs_api_summoneroverview" ("platform");

                CREATE INDEX "wrs_api_summoneroverview_platform_99315587_like" ON "wrs_api_summoneroverview" ("platform" varchar_pattern_ops);

                -- CREATE INDEX "wrs_api_summoneroverview_season_id_4cf689b6" ON "wrs_api_summoneroverview" ("season_id");

                CREATE INDEX "wrs_api_summoneroverview_summoner_id_4f6afb74" ON "wrs_api_summoneroverview" ("puuid");
            """
        ),
        migrations.RunSQL(
            """
            --- belongs to queue, patch, season, platform
            ---partioned on platform
                CREATE TABLE "wrs_api_match" (
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL, 
                    "queueId" integer NOT NULL, 
                    "season_id" bigint NOT NULL,
                    "patch" varchar(25) NOT NULL, 
                    "platform" varchar NOT NULL, 
                    "metadata" jsonb NOT NULL, 
                    PRIMARY KEY ("platform", "matchId"),
                    FOREIGN KEY ("queueId") REFERENCES wrs_api_gamemode ("queueId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
                ) PARTITION BY LIST ("platform");


                CREATE TABLE wrs_api_match_na1 PARTITION OF wrs_api_match FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_match_euw1 PARTITION OF wrs_api_match FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_match_br1 PARTITION OF wrs_api_match FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_match_patch_0b245097" ON "wrs_api_match" ("patch");
                CREATE INDEX "wrs_api_match_patch_0b245097_like" ON "wrs_api_match" ("patch" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_platform_2b2c1736" ON "wrs_api_match" ("platform");
                CREATE INDEX "wrs_api_match_platform_2b2c1736_like" ON "wrs_api_match" ("platform" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_queueId_id_28ffec5b" ON "wrs_api_match" ("queueId");
                CREATE INDEX "wrs_api_match_season_id_996a93bd" ON "wrs_api_match" ("season_id");

            """
        ),
        migrations.RunSQL(
            """
                CREATE TABLE "wrs_api_matchsummoner" (
                    ---"id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, 
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL, 
                    "puuid" varchar(100) NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform", "matchId") REFERENCES wrs_api_match ("platform", "matchId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform", "puuid") REFERENCES wrs_api_summoner ("platform", "puuid") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    CONSTRAINT "wrs_api_matchsummoner_matchId_puuid_id_33a445ac_uniq" UNIQUE ("matchId", "puuid", "platform"),
                    PRIMARY KEY ("platform", "matchId", "puuid")
                ) PARTITION BY LIST (platform);

                
                ---ALTER TABLE "wrs_api_matchsummoner" 
                ---    ADD CONSTRAINT "wrs_api_matchsummoner_matchId_puuid_id_33a445ac_uniq" 
                ---    UNIQUE ("matchId", "puuid", "platform");

                CREATE TABLE wrs_api_matchsummoner_na1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_matchsummoner_euw1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_matchsummoner_kr1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_matchsummoner_matchId_d9b8b076" ON "wrs_api_matchsummoner" ("matchId");
                CREATE INDEX "wrs_api_matchsummoner_puuid_1a034af0" ON "wrs_api_matchsummoner" ("puuid");
            """
        ),
    ]





























# Generated by Django 4.2.7 on 2024-04-05 17:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuiltFifthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfifthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltFirstStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfirststat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltFourthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfourthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltSecondStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtsecondstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltSixthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtsixthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltThirdStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtthirdstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltTierTwoBootStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builttiertwobootstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChampionStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('picked', models.IntegerField()),
                ('banned', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_championstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchId', models.CharField(max_length=20)),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'wrs_api_match',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatchSummoner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'wrs_api_matchsummoner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puuid', models.CharField(max_length=100)),
                ('gameName', models.CharField(max_length=50)),
                ('tagLine', models.CharField(max_length=10)),
                ('profileIconId', models.IntegerField()),
                ('encryptedSummonerId', models.CharField(max_length=100)),
                ('most_recent_game', models.CharField(max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SummonerOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoneroverview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('championId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='GameMode',
            fields=[
                ('queueId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='LegendaryItem',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('name', models.CharField(choices=[('americas', 'americas'), ('asia', 'asia'), ('europe', 'europe'), ('sea', 'sea'), ('esports', 'esports')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('split', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TierTwoBoot',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('code', models.CharField(choices=[('na1', 'na1'), ('euw1', 'euw1'), ('br1', 'br1')], primary_key=True, serialize=False)),
                ('region', models.ForeignKey(db_column='region', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.region')),
            ],
        ),
        migrations.CreateModel(
            name='Patch',
            fields=[
                ('full_version', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=6)),
                ('season_id', models.ForeignKey(db_column='season_id', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.season')),
            ],
        ),
        migrations.RunSQL(
            """
            --- make "id"no longer a primary key (SERIAL NOT NULL)
            --- use PSQL declarative partitioning where necessary to partition tables
            --- create composite primary keys where necessary for partitioning
            --- for tables that references composite primary keys the composite fields must be present in the related table
            --- define the foreign key has a combination of the primary key fields in the same order of primary key they are referencing
            --- remove everything after NOT NULL on "id" (PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY), create partition, add partitions, insert partitions after foreign key constraint, add composite PK
            --- ADD ON DELETE CASCADE to all FOREIGN KEYS
            --- cosmetically clean up ALTER table commands (make them part of the table definition)

                --- Model Summoner
                CREATE TABLE "wrs_api_summoner" (
                    "id" SERIAL NOT NULL,
                    "puuid" varchar(100) NOT NULL,
                    "gameName" varchar(50) NOT NULL,
                    "tagLine" varchar(10) NOT NULL,
                    "profileIconId" integer NOT NULL,
                    "encryptedSummonerId" varchar(100) NOT NULL,
                    "most_recent_game" varchar(25) NULL,
                    "created_at" timestamp with time zone NOT NULL,
                    "updated_at" timestamp with time zone NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("puuid", "platform"),
                    PRIMARY KEY (platform, puuid)
                ) PARTITION BY LIST (platform);

                CREATE TABLE wrs_api_summoner_na1 PARTITION OF wrs_api_summoner FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoner_euw1 PARTITION OF wrs_api_summoner FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoner_br1 PARTITION OF wrs_api_summoner FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_summoner_puuid_ec1c8f0f_like" ON "wrs_api_summoner" ("puuid" varchar_pattern_ops);
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3" ON "wrs_api_summoner" ("platform");
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3_like" ON "wrs_api_summoner" ("platform" varchar_pattern_ops);
            """
        ),
        migrations.RunSQL(
            """
                --- Model SummonerOverview
                CREATE TABLE "wrs_api_summoneroverview" (
                    "id" SERIAL NOT NULL,
                    "puuid" varchar(100) NOT NULL,
                    "platform" varchar NOT NULL, 
                    "season_id" bigint NOT NULL, 
                    "metadata" jsonb NOT NULL,
                    "created_at" timestamp with time zone NOT NULL,
                    "updated_at" timestamp with time zone NOT NULL,
                    FOREIGN KEY (platform, puuid) REFERENCES wrs_api_summoner (platform, puuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY (season_id) REFERENCES wrs_api_season (id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("season_id", "puuid", "platform"),
                    PRIMARY KEY (puuid, season_id, platform)
                ) PARTITION BY LIST (platform);
                
                CREATE TABLE wrs_api_summoneroverview_na1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoneroverview_euw1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoneroverview_br1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_summoneroverview_platform_99315587" ON "wrs_api_summoneroverview" ("platform");
                CREATE INDEX "wrs_api_summoneroverview_platform_99315587_like" ON "wrs_api_summoneroverview" ("platform" varchar_pattern_ops);
                CREATE INDEX "wrs_api_summoneroverview_season_id_4cf689b6" ON "wrs_api_summoneroverview" ("season_id");
                CREATE INDEX "wrs_api_summoneroverview_summoner_id_4f6afb74" ON "wrs_api_summoneroverview" ("puuid");
            """
        ),
        migrations.RunSQL(
            """
                --- Model Match
                CREATE TABLE "wrs_api_match" (
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL, 
                    "queueId" integer NOT NULL, 
                    "season_id" bigint NOT NULL,
                    "patch" varchar(25) NOT NULL, 
                    "platform" varchar NOT NULL, 
                    "metadata" jsonb NOT NULL, 
                    PRIMARY KEY ("platform", "matchId"),
                    FOREIGN KEY ("queueId") REFERENCES wrs_api_gamemode ("queueId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
                ) PARTITION BY LIST ("platform");


                CREATE TABLE wrs_api_match_na1 PARTITION OF wrs_api_match FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_match_euw1 PARTITION OF wrs_api_match FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_match_br1 PARTITION OF wrs_api_match FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_match_patch_0b245097" ON "wrs_api_match" ("patch");
                CREATE INDEX "wrs_api_match_patch_0b245097_like" ON "wrs_api_match" ("patch" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_platform_2b2c1736" ON "wrs_api_match" ("platform");
                CREATE INDEX "wrs_api_match_platform_2b2c1736_like" ON "wrs_api_match" ("platform" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_queueId_id_28ffec5b" ON "wrs_api_match" ("queueId");
                CREATE INDEX "wrs_api_match_season_id_996a93bd" ON "wrs_api_match" ("season_id");
            """
        ),
        migrations.RunSQL(
            """
                --- Model MatchSummoner
                CREATE TABLE "wrs_api_matchsummoner" (
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL, 
                    "puuid" varchar(100) NOT NULL,
                    "season_id" bigint NOT NULL, 
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform", "matchId") REFERENCES wrs_api_match ("platform", "matchId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform", "puuid") REFERENCES wrs_api_summoner ("platform", "puuid") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("matchId", "puuid", "platform"),
                    PRIMARY KEY ("platform", "matchId", "puuid")
                ) PARTITION BY LIST (platform);

                CREATE TABLE wrs_api_matchsummoner_na1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_matchsummoner_euw1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_matchsummoner_kr1 PARTITION OF wrs_api_matchsummoner FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_matchsummoner_matchId_d9b8b076" ON "wrs_api_matchsummoner" ("matchId");
                CREATE INDEX "wrs_api_matchsummoner_puuid_1a034af0" ON "wrs_api_matchsummoner" ("puuid");
                CREATE INDEX "wrs_api_matchsummoner_patch_c0a9c187" ON "wrs_api_matchsummoner" ("patch");
                CREATE INDEX "wrs_api_matchsummoner_season_id_2b145bg1" ON "wrs_api_matchsummoner" ("season_id");
            """
        ),
        migrations.RunSQL(
            """
                --- Model ChampionStat
                CREATE TABLE "wrs_api_championstat" (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "picked" INTEGER NOT NULL,
                    "banned" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("championId", "platform", "patch"),
                    PRIMARY KEY ("platform","championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_championstat_na1 PARTITION OF wrs_api_championstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_championstat_br1 PARTITION OF wrs_api_championstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_championstat_euw1 PARTITION OF wrs_api_championstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_championstat_championId_c231a738 ON wrs_api_championstat ("championId");
                CREATE INDEX wrs_api_championstat_patch_db5180eb ON wrs_api_championstat ("patch");
                CREATE INDEX wrs_api_championstat_patch__db5180eb_like ON wrs_api_championstat ("patch" varchar_pattern_ops);
                CREATE INDEX wrs_api_championstat_platform_88d7ca7a ON wrs_api_championstat ("platform");
                CREATE INDEX wrs_api_championstat_platform_88d7ca7a_like ON wrs_api_championstat ("platform" varchar_pattern_ops);
                CREATE INDEX wrs_api_championstat_season_id_24005562 ON wrs_api_championstat ("season_id");
            """
        ),
        migrations.RunSQL(
            """
                --- Model BuiltFirstStat
                CREATE TABLE wrs_api_builtfirststat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE INDEX wrs_api_builtfirststat_championId_37f26e8d ON wrs_api_builtfirststat ("championId");
                CREATE INDEX wrs_api_builtfirststat_legendary_item_e24cdaad ON wrs_api_builtfirststat ("legendary_item");
                CREATE INDEX wrs_api_builtfirststat_patch_a2f5b0fa ON wrs_api_builtfirststat ("patch");
                CREATE INDEX wrs_api_builtfirststat_patch_a2f5b0fa_like ON wrs_api_builtfirststat ("patch" varchar_pattern_ops);
                CREATE INDEX wrs_api_builtfirststat_platform_83170699 ON wrs_api_builtfirststat ("platform");
                CREATE INDEX wrs_api_builtfirststat_platform_83170699_like ON wrs_api_builtfirststat ("platform" varchar_pattern_ops);
                CREATE INDEX wrs_api_builtfirststat_season_id_e2eb2542 ON wrs_api_builtfirststat ("season_id");

                CREATE TABLE wrs_api_builtfirststat_na1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfirststat_br1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfirststat_euw1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('euw1');
                
                -- Model BuiltSecondStat
                CREATE TABLE wrs_api_builtsecondstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtsecondstat_na1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtsecondstat_br1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtsecondstat_euw1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtsecondstat_championId ON wrs_api_builtsecondstat ("championId");
                CREATE INDEX wrs_api_builtsecondstat_legendary_item ON wrs_api_builtsecondstat ("legendary_item");
                CREATE INDEX wrs_api_builtsecondstat_patch ON wrs_api_builtsecondstat ("patch");
                CREATE INDEX wrs_api_builtsecondstat_platform ON wrs_api_builtsecondstat ("platform");
                CREATE INDEX wrs_api_builtsecondstat_season_id ON wrs_api_builtsecondstat ("season_id");

                
                -- Model BuiltThirdStat
                CREATE TABLE wrs_api_builtthirdstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtthirdstat_na1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtthirdstat_br1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtthirdstat_euw1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtthirdstat_championId ON wrs_api_builtthirdstat ("championId");
                CREATE INDEX wrs_api_builtthirdstat_legendary_item ON wrs_api_builtthirdstat ("legendary_item");
                CREATE INDEX wrs_api_builtthirdstat_patch ON wrs_api_builtthirdstat ("patch");
                CREATE INDEX wrs_api_builtthirdstat_platform ON wrs_api_builtthirdstat ("platform");
                CREATE INDEX wrs_api_builtthirdstat_season_id ON wrs_api_builtthirdstat ("season_id");

                
                -- Model BuiltFourthStat
                CREATE TABLE wrs_api_builtfourthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtfourthstat_na1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfourthstat_br1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfourthstat_euw1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtfourthstat_championId ON wrs_api_builtfourthstat ("championId");
                CREATE INDEX wrs_api_builtfourthstat_legendary_item ON wrs_api_builtfourthstat ("legendary_item");
                CREATE INDEX wrs_api_builtfourthstat_patch ON wrs_api_builtfourthstat ("patch");
                CREATE INDEX wrs_api_builtfourthstat_platform ON wrs_api_builtfourthstat ("platform");
                CREATE INDEX wrs_api_builtfourthstat_season_id ON wrs_api_builtfourthstat ("season_id");

                
                -- Model BuiltFifthStat
                CREATE TABLE wrs_api_builtfifthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtfifthstat_na1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfifthstat_br1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfifthstat_euw1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtfifthstat_championId ON wrs_api_builtfifthstat ("championId");
                CREATE INDEX wrs_api_builtfifthstat_legendary_item ON wrs_api_builtfifthstat ("legendary_item");
                CREATE INDEX wrs_api_builtfifthstat_patch ON wrs_api_builtfifthstat ("patch");
                CREATE INDEX wrs_api_builtfifthstat_platform ON wrs_api_builtfifthstat ("platform");
                CREATE INDEX wrs_api_builtfifthstat_season_id ON wrs_api_builtfifthstat ("season_id");

                
                -- Model BuiltSixthStat
                CREATE TABLE wrs_api_builtsixthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtsixthstat_na1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtsixthstat_br1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtsixthstat_euw1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtsixthstat_championId ON wrs_api_builtsixthstat ("championId");
                CREATE INDEX wrs_api_builtsixthstat_legendary_item ON wrs_api_builtsixthstat ("legendary_item");
                CREATE INDEX wrs_api_builtsixthstat_patch ON wrs_api_builtsixthstat ("patch");
                CREATE INDEX wrs_api_builtsixthstat_platform ON wrs_api_builtsixthstat ("platform");
                CREATE INDEX wrs_api_builtsixthstat_season_id ON wrs_api_builtsixthstat ("season_id");
                
                
                -- Model BuiltTierTwoBootStat
                CREATE TABLE wrs_api_builttiertwobootstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "tier_two_boot" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("tier_two_boot") REFERENCES wrs_api_tiertwoboot ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch (full_version) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform (code) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season (id) DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "tier_two_boot", "championId","patch"),
                    PRIMARY KEY ("platform", "tier_two_boot", "championId", "patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builttiertwobootstat_na1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builttiertwobootstat_br1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builttiertwobootstat_euw1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builttiertwobootstat_championId ON wrs_api_builttiertwobootstat ("championId");
                CREATE INDEX wrs_api_builttiertwobootstat_tier_two_boot ON wrs_api_builttiertwobootstat ("tier_two_boot");
                CREATE INDEX wrs_api_builttiertwobootstat_patch ON wrs_api_builttiertwobootstat ("patch");
                CREATE INDEX wrs_api_builttiertwobootstat_platform ON wrs_api_builttiertwobootstat ("platform");
                CREATE INDEX wrs_api_builttiertwobootstat_season_id ON wrs_api_builttiertwobootstat ("season_id");
            """
        )
    ]








# Generated by Django 4.2.7 on 2024-04-08 17:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuiltFifthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfifthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltFirstStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfirststat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltFourthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtfourthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltSecondStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtsecondstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltSixthStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtsixthstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltThirdStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builtthirdstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltTierTwoBootStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_builttiertwobootstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChampionStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('picked', models.IntegerField()),
                ('banned', models.IntegerField()),
            ],
            options={
                'db_table': 'wrs_api_championstat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchId', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'wrs_api_match',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='summonermatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'wrs_api_summonermatch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puuid', models.CharField(max_length=100)),
                ('gameName', models.CharField(max_length=50)),
                ('tagLine', models.CharField(max_length=10)),
                ('profileIconId', models.IntegerField()),
                ('encryptedSummonerId', models.CharField(max_length=100)),
                ('most_recent_game', models.CharField(max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SummonerOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'wrs_api_summoneroverview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('championId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='GameMode',
            fields=[
                ('queueId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='LegendaryItem',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='MatchDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('name', models.CharField(choices=[('americas', 'americas'), ('asia', 'asia'), ('europe', 'europe'), ('sea', 'sea'), ('esports', 'esports')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('split', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TierTwoBoot',
            fields=[
                ('itemId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('code', models.CharField(choices=[('na1', 'na1'), ('euw1', 'euw1'), ('br1', 'br1')], primary_key=True, serialize=False)),
                ('region', models.ForeignKey(db_column='region', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.region')),
            ],
        ),
        migrations.CreateModel(
            name='Patch',
            fields=[
                ('full_version', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=6)),
                ('season_id', models.ForeignKey(db_column='season_id', on_delete=django.db.models.deletion.CASCADE, to='wrs_api.season')),
            ],
        ),
        migrations.RunSQL(sql=[
            """
            --- make "id" no longer a primary key (SERIAL NOT NULL)
            --- use PSQL declarative partitioning where necessary to partition tables
            --- create composite primary keys where necessary for partitioning
            --- for tables that references composite primary keys the composite fields must be present in the related table
            --- define the foreign key has a combination of the primary key fields in the same order of primary key they are referencing
            --- remove everything after NOT NULL on "id" (PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY), create partition, add partitions, insert partitions after foreign key constraint, add composite PK
            --- ADD ON DELETE CASCADE to all FOREIGN KEYS
            --- cosmetically clean up ALTER table commands (make them part of the table definition)

                --- Model Summoner
                CREATE TABLE "wrs_api_summoner" (
                    "id" SERIAL NOT NULL,
                    "puuid" varchar(100) NOT NULL,
                    "gameName" varchar(50) NOT NULL,
                    "tagLine" varchar(10) NOT NULL,
                    "profileIconId" integer NOT NULL,
                    "encryptedSummonerId" varchar(100) NOT NULL,
                    "most_recent_game" varchar(25) NULL,
                    "created_at" timestamp with time zone NOT NULL,
                    "updated_at" timestamp with time zone NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("puuid", "platform"),
                    PRIMARY KEY (platform, puuid)
                ) PARTITION BY LIST (platform);

                CREATE TABLE wrs_api_summoner_na1 PARTITION OF wrs_api_summoner FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoner_euw1 PARTITION OF wrs_api_summoner FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoner_br1 PARTITION OF wrs_api_summoner FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_summoner_puuid_ec1c8f0f_like" ON "wrs_api_summoner" ("puuid" varchar_pattern_ops);
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3" ON "wrs_api_summoner" ("platform");
                CREATE INDEX "wrs_api_summoner_platform_39a7e8f3_like" ON "wrs_api_summoner" ("platform" varchar_pattern_ops);


                --- Model SummonerOverview
                CREATE TABLE "wrs_api_summoneroverview" (
                    "id" SERIAL NOT NULL,
                    "puuid" varchar(100) NOT NULL,
                    "platform" varchar NOT NULL, 
                    "season_id" bigint NOT NULL, 
                    "metadata" jsonb NOT NULL,
                    "created_at" timestamp with time zone NOT NULL,
                    "updated_at" timestamp with time zone NOT NULL,
                    FOREIGN KEY (platform, puuid) REFERENCES wrs_api_summoner (platform, puuid) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY (season_id) REFERENCES wrs_api_season (id) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("season_id", "puuid", "platform"),
                    PRIMARY KEY (puuid, season_id, platform)
                ) PARTITION BY LIST (platform);
                
                CREATE TABLE wrs_api_summoneroverview_na1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summoneroverview_euw1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summoneroverview_br1 PARTITION OF wrs_api_summoneroverview FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_summoneroverview_platform_99315587" ON "wrs_api_summoneroverview" ("platform");
                CREATE INDEX "wrs_api_summoneroverview_platform_99315587_like" ON "wrs_api_summoneroverview" ("platform" varchar_pattern_ops);
                CREATE INDEX "wrs_api_summoneroverview_season_id_4cf689b6" ON "wrs_api_summoneroverview" ("season_id");
                CREATE INDEX "wrs_api_summoneroverview_summoner_id_4f6afb74" ON "wrs_api_summoneroverview" ("puuid");

                
                --- Model Match
                CREATE TABLE "wrs_api_match" (
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL, 
                    "queueId" integer NOT NULL, 
                    "season_id" bigint NOT NULL,
                    "patch" varchar(25) NOT NULL, 
                    "platform" varchar NOT NULL, 
                    "metadata" jsonb NOT NULL, 
                    PRIMARY KEY ("platform", "matchId"),
                    FOREIGN KEY ("queueId") REFERENCES wrs_api_gamemode ("queueId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED
                ) PARTITION BY LIST ("platform");


                CREATE TABLE wrs_api_match_na1 PARTITION OF wrs_api_match FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_match_euw1 PARTITION OF wrs_api_match FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_match_br1 PARTITION OF wrs_api_match FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_match_patch_0b245097" ON "wrs_api_match" ("patch");
                CREATE INDEX "wrs_api_match_patch_0b245097_like" ON "wrs_api_match" ("patch" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_platform_2b2c1736" ON "wrs_api_match" ("platform");
                CREATE INDEX "wrs_api_match_platform_2b2c1736_like" ON "wrs_api_match" ("platform" varchar_pattern_ops);
                CREATE INDEX "wrs_api_match_queueId_id_28ffec5b" ON "wrs_api_match" ("queueId");
                CREATE INDEX "wrs_api_match_season_id_996a93bd" ON "wrs_api_match" ("season_id");
 
                
                --- Model summonermatch
                CREATE TABLE "wrs_api_summonermatch" (
                    "id" SERIAL NOT NULL,
                    "matchId" varchar(20) NOT NULL,
                    "queueId" integer NOT NULL, 
                    "puuid" varchar(100) NOT NULL,
                    "season_id" bigint NOT NULL, 
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" varchar NOT NULL,
                    FOREIGN KEY ("platform", "matchId") REFERENCES wrs_api_match ("platform", "matchId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform", "puuid") REFERENCES wrs_api_summoner ("platform", "puuid") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("queueId") REFERENCES wrs_api_gamemode ("queueId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES "wrs_api_platform" ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("matchId", "puuid", "platform"),
                    PRIMARY KEY ("platform", "matchId", "puuid")
                ) PARTITION BY LIST (platform);

                CREATE TABLE wrs_api_summonermatch_na1 PARTITION OF wrs_api_summonermatch FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_summonermatch_euw1 PARTITION OF wrs_api_summonermatch FOR VALUES IN ('euw1');
                CREATE TABLE wrs_api_summonermatch_kr1 PARTITION OF wrs_api_summonermatch FOR VALUES IN ('br1');

                CREATE INDEX "wrs_api_summonermatch_matchId_d9b8b076" ON "wrs_api_summonermatch" ("matchId");
                CREATE INDEX "wrs_api_summonermatch_queueId_id_39ggfd6c" ON "wrs_api_summonermatch" ("queueId");
                CREATE INDEX "wrs_api_summonermatch_puuid_1a034af0" ON "wrs_api_summonermatch" ("puuid");
                CREATE INDEX "wrs_api_summonermatch_patch_c0a9c187" ON "wrs_api_summonermatch" ("patch");
                CREATE INDEX "wrs_api_summonermatch_season_id_2b145bg1" ON "wrs_api_summonermatch" ("season_id");

                
                --- Model ChampionStat
                CREATE TABLE "wrs_api_championstat" (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "picked" INTEGER NOT NULL,
                    "banned" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("championId", "platform", "patch"),
                    PRIMARY KEY ("platform","championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_championstat_na1 PARTITION OF wrs_api_championstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_championstat_br1 PARTITION OF wrs_api_championstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_championstat_euw1 PARTITION OF wrs_api_championstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_championstat_championId_c231a738 ON wrs_api_championstat ("championId");
                CREATE INDEX wrs_api_championstat_patch_db5180eb ON wrs_api_championstat ("patch");
                CREATE INDEX wrs_api_championstat_patch__db5180eb_like ON wrs_api_championstat ("patch" varchar_pattern_ops);
                CREATE INDEX wrs_api_championstat_platform_88d7ca7a ON wrs_api_championstat ("platform");
                CREATE INDEX wrs_api_championstat_platform_88d7ca7a_like ON wrs_api_championstat ("platform" varchar_pattern_ops);
                CREATE INDEX wrs_api_championstat_season_id_24005562 ON wrs_api_championstat ("season_id");

                
                --- Model BuiltFirstStat
                CREATE TABLE wrs_api_builtfirststat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE INDEX wrs_api_builtfirststat_championId_37f26e8d ON wrs_api_builtfirststat ("championId");
                CREATE INDEX wrs_api_builtfirststat_legendary_item_e24cdaad ON wrs_api_builtfirststat ("legendary_item");
                CREATE INDEX wrs_api_builtfirststat_patch_a2f5b0fa ON wrs_api_builtfirststat ("patch");
                CREATE INDEX wrs_api_builtfirststat_patch_a2f5b0fa_like ON wrs_api_builtfirststat ("patch" varchar_pattern_ops);
                CREATE INDEX wrs_api_builtfirststat_platform_83170699 ON wrs_api_builtfirststat ("platform");
                CREATE INDEX wrs_api_builtfirststat_platform_83170699_like ON wrs_api_builtfirststat ("platform" varchar_pattern_ops);
                CREATE INDEX wrs_api_builtfirststat_season_id_e2eb2542 ON wrs_api_builtfirststat ("season_id");

                CREATE TABLE wrs_api_builtfirststat_na1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfirststat_br1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfirststat_euw1 PARTITION OF wrs_api_builtfirststat FOR VALUES IN ('euw1');
                
                -- Model BuiltSecondStat
                CREATE TABLE wrs_api_builtsecondstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtsecondstat_na1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtsecondstat_br1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtsecondstat_euw1 PARTITION OF wrs_api_builtsecondstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtsecondstat_championId ON wrs_api_builtsecondstat ("championId");
                CREATE INDEX wrs_api_builtsecondstat_legendary_item ON wrs_api_builtsecondstat ("legendary_item");
                CREATE INDEX wrs_api_builtsecondstat_patch ON wrs_api_builtsecondstat ("patch");
                CREATE INDEX wrs_api_builtsecondstat_platform ON wrs_api_builtsecondstat ("platform");
                CREATE INDEX wrs_api_builtsecondstat_season_id ON wrs_api_builtsecondstat ("season_id");

                
                -- Model BuiltThirdStat
                CREATE TABLE wrs_api_builtthirdstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtthirdstat_na1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtthirdstat_br1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtthirdstat_euw1 PARTITION OF wrs_api_builtthirdstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtthirdstat_championId ON wrs_api_builtthirdstat ("championId");
                CREATE INDEX wrs_api_builtthirdstat_legendary_item ON wrs_api_builtthirdstat ("legendary_item");
                CREATE INDEX wrs_api_builtthirdstat_patch ON wrs_api_builtthirdstat ("patch");
                CREATE INDEX wrs_api_builtthirdstat_platform ON wrs_api_builtthirdstat ("platform");
                CREATE INDEX wrs_api_builtthirdstat_season_id ON wrs_api_builtthirdstat ("season_id");

                
                -- Model BuiltFourthStat
                CREATE TABLE wrs_api_builtfourthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtfourthstat_na1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfourthstat_br1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfourthstat_euw1 PARTITION OF wrs_api_builtfourthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtfourthstat_championId ON wrs_api_builtfourthstat ("championId");
                CREATE INDEX wrs_api_builtfourthstat_legendary_item ON wrs_api_builtfourthstat ("legendary_item");
                CREATE INDEX wrs_api_builtfourthstat_patch ON wrs_api_builtfourthstat ("patch");
                CREATE INDEX wrs_api_builtfourthstat_platform ON wrs_api_builtfourthstat ("platform");
                CREATE INDEX wrs_api_builtfourthstat_season_id ON wrs_api_builtfourthstat ("season_id");

                
                -- Model BuiltFifthStat
                CREATE TABLE wrs_api_builtfifthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtfifthstat_na1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtfifthstat_br1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtfifthstat_euw1 PARTITION OF wrs_api_builtfifthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtfifthstat_championId ON wrs_api_builtfifthstat ("championId");
                CREATE INDEX wrs_api_builtfifthstat_legendary_item ON wrs_api_builtfifthstat ("legendary_item");
                CREATE INDEX wrs_api_builtfifthstat_patch ON wrs_api_builtfifthstat ("patch");
                CREATE INDEX wrs_api_builtfifthstat_platform ON wrs_api_builtfifthstat ("platform");
                CREATE INDEX wrs_api_builtfifthstat_season_id ON wrs_api_builtfifthstat ("season_id");

                
                -- Model BuiltSixthStat
                CREATE TABLE wrs_api_builtsixthstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "legendary_item" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("legendary_item") REFERENCES wrs_api_legendaryitem ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch ("full_version") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform ("code") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season ("id") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "legendary_item", "championId","patch"),
                    PRIMARY KEY ("platform", "legendary_item", "championId","patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builtsixthstat_na1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builtsixthstat_br1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builtsixthstat_euw1 PARTITION OF wrs_api_builtsixthstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builtsixthstat_championId ON wrs_api_builtsixthstat ("championId");
                CREATE INDEX wrs_api_builtsixthstat_legendary_item ON wrs_api_builtsixthstat ("legendary_item");
                CREATE INDEX wrs_api_builtsixthstat_patch ON wrs_api_builtsixthstat ("patch");
                CREATE INDEX wrs_api_builtsixthstat_platform ON wrs_api_builtsixthstat ("platform");
                CREATE INDEX wrs_api_builtsixthstat_season_id ON wrs_api_builtsixthstat ("season_id");
                
                
                -- Model BuiltTierTwoBootStat
                CREATE TABLE wrs_api_builttiertwobootstat (
                    "id" SERIAL NOT NULL,
                    "wins" INTEGER NOT NULL,
                    "losses" INTEGER NOT NULL,
                    "championId" INTEGER NOT NULL,
                    "tier_two_boot" INTEGER NOT NULL,
                    "patch" VARCHAR(25) NOT NULL,
                    "platform" VARCHAR NOT NULL,
                    "season_id" BIGINT NOT NULL,
                    FOREIGN KEY ("championId") REFERENCES wrs_api_champion ("championId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("tier_two_boot") REFERENCES wrs_api_tiertwoboot ("itemId") ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("patch") REFERENCES wrs_api_patch (full_version) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("platform") REFERENCES wrs_api_platform (code) ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED,
                    FOREIGN KEY ("season_id") REFERENCES wrs_api_season (id) DEFERRABLE INITIALLY DEFERRED,
                    UNIQUE ("platform", "tier_two_boot", "championId","patch"),
                    PRIMARY KEY ("platform", "tier_two_boot", "championId", "patch")
                ) PARTITION BY LIST ("platform");

                CREATE TABLE wrs_api_builttiertwobootstat_na1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('na1');
                CREATE TABLE wrs_api_builttiertwobootstat_br1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('br1');
                CREATE TABLE wrs_api_builttiertwobootstat_euw1 PARTITION OF wrs_api_builttiertwobootstat FOR VALUES IN ('euw1');

                CREATE INDEX wrs_api_builttiertwobootstat_championId ON wrs_api_builttiertwobootstat ("championId");
                CREATE INDEX wrs_api_builttiertwobootstat_tier_two_boot ON wrs_api_builttiertwobootstat ("tier_two_boot");
                CREATE INDEX wrs_api_builttiertwobootstat_patch ON wrs_api_builttiertwobootstat ("patch");
                CREATE INDEX wrs_api_builttiertwobootstat_platform ON wrs_api_builttiertwobootstat ("platform");
                CREATE INDEX wrs_api_builttiertwobootstat_season_id ON wrs_api_builttiertwobootstat ("season_id");
            """],
            reverse_sql=[
                """
                    DROP TABLE wrs_api_summoner_na1;
                    DROP TABLE wrs_api_summoner_euw1;
                    DROP TABLE wrs_api_summoner_br1;
                    DROP TABLE wrs_api_summoner;

                    DROP TABLE wrs_api_summoneroverview_na1;
                    DROP TABLE wrs_api_summoneroverview_euw1;
                    DROP TABLE wrs_api_summoneroverview_br1;
                    DROP TABLE wrs_api_summoneroverview;

                    DROP TABLE wrs_api_match_na1;
                    DROP TABLE wrs_api_match_euw1;
                    DROP TABLE wrs_api_match_nbr1;
                    DROP TABLE wrs_api_match;

                    DROP TABLE wrs_api_matchsummoner_na1;
                    DROP TABLE wrs_api_matchsummoner_euw1;
                    DROP TABLE wrs_api_matchsummoner_br1;
                    DROP TABLE wrs_api_matchsummoner;

                    DROP TABLE wrs_api_championstat_na1;
                    DROP TABLE wrs_api_championstat_euw1;
                    DROP TABLE wrs_api_championstat_br1;
                    DROP TABLE wrs_api_championstat;
                    
                    DROP TABLE wrs_api_builtfirststat_na1;
                    DROP TABLE wrs_api_builtfirststat_euw1;
                    DROP TABLE wrs_api_builtfirststat_br1;
                    DROP TABLE wrs_api_builtfirststat;

                    DROP TABLE wrs_api_builtsecondstat_na1;
                    DROP TABLE wrs_api_builtsecondstat_euw1;
                    DROP TABLE wrs_api_builtsecondstat_br1;
                    DROP TABLE wrs_api_builtsecondstat;

                    DROP TABLE wrs_api_builtthirdstat_na1;
                    DROP TABLE wrs_api_builtthirdstat_euw1;
                    DROP TABLE wrs_api_builtthirdstat_br1;
                    DROP TABLE wrs_api_builtthirdstat;

                    DROP TABLE wrs_api_builtfourthstat_na1;
                    DROP TABLE wrs_api_builtfourthstat_euw1;
                    DROP TABLE wrs_api_builtfourthstat_br1;
                    DROP TABLE wrs_api_builtfourthstat;

                    DROP TABLE wrs_api_builtfifthstat_na1;
                    DROP TABLE wrs_api_builtfifthstat_euw1;
                    DROP TABLE wrs_api_builtfifthstat_br1;
                    DROP TABLE wrs_api_builtfifthstat;

                    DROP TABLE wrs_api_builtsixthstat_na1;
                    DROP TABLE wrs_api_builtsixthstat_euw1;
                    DROP TABLE wrs_api_builtsixthstat_br1;
                    DROP TABLE wrs_api_builtsixthstat;

                    DROP TABLE wrs_api_builttiertwobootstat_na1;
                    DROP TABLE wrs_api_builttiertwobootstat_euw1;
                    DROP TABLE wrs_api_builttiertwobootstat_br1;
                    DROP TABLE wrs_api_builttiertwobootstat;
                """
            ]
        )
    ]
